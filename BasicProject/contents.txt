r에서는 모든 데이터를 배열로 취급함. 
배열(Array)이란? 데이터를 순차적으로 붙여서 효율적으로 사용하게 끔 하는 것이 배열, 행열, 파이썬에서 집합과 비슷. 파이썬에서는 배열이 없어서 따로 모듈을 설치해야 함.
1). 같은 형식끼리 묶어준다.
2). 크기가 정해져 있다.
3). 삽입,삭제가 불편
10,20,30,40.... 여기서 20을 빼면 앞으로 당겨짐 10,30,40.... 
삽입도 중간에 a를 넣으면 뒤로 당겨지짐 수많은 데이터가 있다면? 
성능이 좋기 때문에 배열을 씀. 
1차원 
한줄로 1.1.1.1.1.1..1.1.1.1.1.
2차원 
여러개의 1차원 배열을 합친 것이 2차원 --> 이런것을 table, 행렬이라 함.
1.1.1.1.1.1.1.1.1.1.1.1.1.1.
2.2.2.2.2.2.2.2.2.2.2.2.2.2.

3차원 2차원 배열 여러개를 합친것, 입체감이 있다고 함. 
1.1.1.1.1.1.1.1.1.1.1.1.1.              3.3.3.3.3.3.3.3.3.3.3.3.
2.2.2.2.2.2.2.2.2.2.2.2.2.              4.4.4.4.4.4.4.4.4.4.4.4.


I. 데이터 타입(데이터 구조)
==============================
(1). 스칼라 타입(0차원) : 한개의 데이터 (e.g. 파이썬에서는 int, str, float ...)
  -숫자(numeric), 문자(character), boolean, facter, 결측치(NA,NAN,null,Inf)
  
(2). vector(1차원) : 기본 데이터 타입.

(3). matrix(2차원, 행렬)

(4). Data Frame(2차원, 배열이 아님): 같은 형식의 데이터를 사용하는 배열과 달리 여러개의 형식의 데이터를 사용하고자. 하지만 배열 보다 성능이 좋지 못하다는 단점이 있다. R에서 가장 많이 사용되는 구조 

(5). Array(3차원 이상): 같은 형식만 묶을 수 있고

(6). list(3차원 이상, 파이썬의 리스트와 완전 다름): 다른 형식도 묶을 수 있다. 
--------------------------------------------------------------------

1. vector 
  (1) 기본자료 구조
  (2) 1차원 배열
  (3) 인덱스 접근
  (4) 동일한 자료형만 저장
  (5) c(),swq(),rep()

#### Vector ####


* 데이터 타입관련 기본 함수 
1) is.xxxxxx()  이게 그게 맞냐 
2) as.xxxxxxx() 해당 데이터 타입을 바꿔 주겠다.

2. Factor
  (1) 범주형 데이터
  
  양적 데이터
    연속 데이터(비율)  e.g. 무게, 가격, 주가
    이산 데이터(등간) 0의 개념이 없음 e.g. 온도 
  질적 데이터
    명목 데이터(범주형) e.g. 브랜드 
    서열 데이터 e.g. 자동차 년식
    
3. Matrix
  (1) 행과 열의 2차원 배열.
  (2) 컬럼 단위로 동일한 데이터 타입만 저장 가능
  (3) 함수 matrix(), rbind(), cbind(), .... 
  
  
4. DataFrame
  (1) DB의 Table과 유사
  (2) R에서 가장 많이 사용되는 구조
  (3) 컬럼단위로 서로 다른 데이터타입 사용 가능
  (4) data.frame(), read.csv(), read.delim(), read.table(), ...
  
5. Array
  (1) 행, 열, 면의 3차원 배열 형태의 객체 생성
  (2) array()
  
6. List - 3차원 이상, 배열은 아님, 가장 크게 묶을 수 있는, 1,2 차원으로 바꿔쓰는게 일반적 
  (1) key와 value 한쌍으로 묶음 
  (2) 파이썬의 dict와 유사

------------------------------------------------------------------

II. Regular Expression

1. 반복 
  1) * : 0번 이상 반복(안올 수도 있음)
    ab* : ab는 확실한데 뒤에 뭐들어가는지는 모를때, *는 앞글자인 b를 가르킴
    b라는 것이 0번이상 반복? :: a,ab,abb,abbbb,....
    lo*1 :ll,lol,lool,loool,looool..... 이런식으로 사용 
    뽑아내고자 하는 특정 문자열의 규칙을 만들어낼 수 있음 
    
  2) + : 1번 이상 반복 무조건 한번은 들어가는 
    ab+ :ab ,abb,abbb,....
    
  3) ? : 0회 또는 1회(갯수를 정확하게 알고 있을때 사용하면 좋음)
    ab? : a,ab
    
  4) {m} : m회 반복 
    a{3}b :aaab
    
  5) {m, n}: m회 부터 n회까지 반복 
    a{2,3}bc: aabc, aaabc
    
2. 매칭
  1) . : 줄바꿈 문자(\n)를 제외한 모든 문자와 일치하는 문자를 찾아라
    a.b : aab,abb,acb,adb.... 줄바꿈 문자 제외하고 가운데에 누가와도 상관이     없음.
  
  2) ^ : 문자열의 시작
    ^abc: abc... 무조건 a로 시각해야함.
    
  3) $ : 문자열의 마지막
    $a : 어떤 문자로 시작해도 상관 없는데 무조건 마지막에는 a로 끝나야 함.
          zxcvba, za
  
  4) [ ]: 문자 집합 중 한 문자와 매치 
    [abc]xyz : axyz,bxyz,cxyz
    범위 지정 가능 
    [a-z]bc : abc,bbc,cbc,dbc,...,zbc
    a[.]b : a.b
    [a^bc]hello : b라는 단어를 제외해라 ahello, chello
    [a-zA-Z0-9]hello : 특수 문자를 제외한 모든 숫자와 문자가 올 수 있다
    
3. 특수문자(\문자)
  1) \d : 모든 숫자와 매치
    ab\d\dc : ab00c,ab01c,ab99c,...
    ab[0-9][0-9]c
    
  2) \D : 숫자가 아닌 나머지 문자와 매치 
  
  3) \s : 공백문자와 매치 
  
  4) \S : 공백문자를 제외한 모든 것과 매치 
  
  5) \w : 숫자 또는 문자와 매치
  
  6) \W : 숫자 또는 문자가 아닌 모든 문자와 매치 

------------------------------------------------------------------

III. 기술 통계량
  1) min(vec), max(vec)
  2) range(vec) : 벡터를 대상으로 범위 값을 구하는 함수 
  3) mean(vec), median(vec)
  4) sum(vec)
  5) order(vec)
  6) rank(vec)
  7) sd(vec),var(vec) - 분산, 표준편차
  8) quantile(vec) 4분위수 
  9) table(vec)
  10) str()
  11) sample(x,y): x의 범위에서 y만큼 샘플 데이터를 생성하는 함수 
  12) head(), tail()
  13) unique()
  ...
  
  ----------------------------------------------------------------
  IV. Data PreProcessing
  

  1. 순서 
    데이터 탐색 --> 결측치 처리 --> 이상치 처리(극단치) -->            Feature Eengineering
     (컬럼, 속성)
  
  2. 데이터 탐색 
    (1) 변수 확인 
    (2) 변수 유형(범주형, 연속형, 문자형, 숫자형,....)확인
    (3) 변수의 통계량 
    (4) 변수와 관계, 평균차이 검증(마지막 분석단계에서도 사용)
    
  3. 결측치 처리 
    (1) 다른 값으로 대체(평균, 최빈값, 중간값...)
    (2) 삭제 
    (3) 예측 : 선형 회귀 분석, 로지스틱 회귀 분석 
    
  4. 이상치 처리 
    (1) 이상치 탐색 
      - 시각적인 확인(그래프를 통해) : 산포도(산점도, scatter plot         ), 산포도 확장 --> 상자도표(box plot)
      - 통계적 확인 : 표준편차(잔차), laverage, Cook's D(쿡의 거리         )
    
    (2) 처리 방법
      - 다른 값으로 대체
      - 리샘플링(케이스별로 분리)
      
  5. Feature Enginneer
    (1) Scaling : 단위 변경 
      - 표준화, 정규화
    
    (2) Binning: 연속형 변수를 범주형 범수로 변환 
    
    (3) Dummy : 범주형 변수를 연속형으로 변환 , 머신러닝 ,딥러닝 용도로 맣이 사용
    
    (4) Transform: 기존 존재하는 변수의 성질을 이용하여 다른 변수를 만드는 방법 
    
    
=================================================================   
 V. dplyr
 
  (1) filter(): 행추출  --> subset(), 데이터[행 추출조건,],sql의                  where와 유사
  (2) select(): 열추출 --> 데이터[,열 추출 조건],sqㅣ의 select와                  유사
  (3) arrange(): 정렬 --> order(), sort()
  (4) mutate() : 열추가
  (5) summarize() : 통계량 산출
  (6) groupby(): 집단별로 나누기 
  (7) left_join:() 데이터 합치기(열)
  (8) bind_row() : 데이터 합치기(행)
    
    
    
    
    
    
    
  )





 ( 2, 3 ) * ( 3, 2 )
 ( 2, 1 ) * ( 1, 4 )
 ( 2, 4 ) * ( 4, 3 )
 ( 2, 2 ) * ( 3, 2 )











